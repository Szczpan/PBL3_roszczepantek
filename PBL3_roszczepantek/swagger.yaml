openapi: 3.0.0
info:
  title: "PBL3 project"
  description: "Watering control based on weather forecast"
  version: 1.0.0

servers:
  - url: "/api-v1"


components:
  schemas:
    main-device:
      type: "object"
      required:
        - main-id
      properties:
        main-id:
          type: "integer"
        sensor-nodes:
          type: "array"
          items:
            $ref: '#/components/schemas/sensor-node'
        valve-nodes:
          type: "array"
          items:
            $ref: '#/components/schemas/valve-node'

    sensor-node:
      type: "object"
      required:
        - sensor-id
      properties:
        sensor-id:
          type: "integer"
        air-humidity:
          type: "integer"
        soil-moisture:
          type: "integer"
        air-temperature:
          type: "integer"
        battery-level:
          type: "integer"

    valve-node:
      type: "object"
      required:
        - valve-id
      properties:
        valve-id:
          type: "integer"
        state:
          type: "boolean"
        time-left:
          type: "integer"


  parameters:
    main-id:
      name: "main-id"
      in: path
      required: true
      schema:
        type: "integer"

    sensor-id:
      name: "sensor-id"
      in: path
      required: true
      schema:
        type: "integer"

    valve-id:
      name: "valve-id"
      in: path
      required: true
      schema:
        type: "integer"

  requestBodies:
    main-node:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/main-device"
    sensor-body:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/sensor-node'




paths:
  /devices:
    post:
      operationId: operations.addMainNode
      requestBody:
        x-body-name: "main_node_dict"
        $ref: "#/components/requestBodies/main-node"
      responses:
        200:
          description: Successfully added new main node
    get:
      operationId: operations.getAllMainNodes
      responses:
        200:
          description: Successfully listed all main node IDs

  /devices/{main-id}:
    parameters:
      - $ref: "#/components/parameters/main-id"
    get:
      operationId: operations.getSingleMainNode
      responses:
        200:
          description: Successfully sent info about whole system attached to this main node
    delete:
      operationId: operations.deleteSingleMainNode
      responses:
        200:
          description: Successfully deleted single main node

  /devices/{main-id}/sensors:
    parameters:
      - $ref: "#/components/parameters/main-id"
    post:
      operationId: operations.addSensor
      requestBody:
        x-body-name: "sensor_body"
        $ref: "#/components/requestBodies/sensor-body"
      responses:
        200:
          description: Successfully added new sensor node

  /devices/{main-id}/valves:
    parameters:
      - $ref: "#/components/parameters/main-id"
    post:
      operationId: operations.addValve
      responses:
        200:
          description: Successfully added new valve node

  /devices/{main-id}/sensors/{sensor-id}:
    parameters:
      - $ref: "#/components/parameters/main-id"
      - $ref: "#/components/parameters/sensor-id"
    get:
      operationId: operations.getSensor
      responses:
        200:
          description: Successfully listed info from all sensors from given sensor node
    delete:
      operationId: operations.deleteSensor
      responses:
        200:
          description: Deleted single sensor node

  /devices/{main-id}/valves/{valve-id}:
    parameters:
      - $ref: "#/components/parameters/main-id"
      - $ref: "#/components/parameters/valve-id"
    get:
      operationId: operations.getValve
      responses:
        200:
          description: Successfully listed info from given valve node
    delete:
      operationId: operations.deleteValve
      responses:
        200:
          description: Deleted single valve node
  
